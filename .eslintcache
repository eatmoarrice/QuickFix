[{"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\index.js":"1","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\App.js":"2","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\serviceWorker.js":"3","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\Redirect404.js":"4","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\NavBar.js":"5","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\PageNotFound.js":"6","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssuePage.js":"7","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\AllIssuesPage.js":"8","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\HomePage.js":"9","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\PostIssue.js":"10","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\SideBar.js":"11","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssuePageHeader.js":"12","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\OriginalPost.js":"13","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\CommentBlock.js":"14","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\Reply.js":"15","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssueSearchBar.js":"16","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssueBlock.js":"17","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\CodeBlock.js":"18","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssueBlockHeader.js":"19","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssueBlockIssue.js":"20"},{"size":520,"mtime":1596345563511,"results":"21","hashOfConfig":"22"},{"size":2299,"mtime":1610277541005,"results":"23","hashOfConfig":"22"},{"size":5227,"mtime":1596345563512,"results":"24","hashOfConfig":"22"},{"size":198,"mtime":1596345563510,"results":"25","hashOfConfig":"22"},{"size":1485,"mtime":1596345563508,"results":"26","hashOfConfig":"22"},{"size":731,"mtime":1596345563509,"results":"27","hashOfConfig":"22"},{"size":2143,"mtime":1596345563508,"results":"28","hashOfConfig":"22"},{"size":878,"mtime":1596345563505,"results":"29","hashOfConfig":"22"},{"size":357,"mtime":1596345563506,"results":"30","hashOfConfig":"22"},{"size":2883,"mtime":1596345563510,"results":"31","hashOfConfig":"22"},{"size":1172,"mtime":1596345563511,"results":"32","hashOfConfig":"22"},{"size":851,"mtime":1596345563508,"results":"33","hashOfConfig":"22"},{"size":2986,"mtime":1596345563509,"results":"34","hashOfConfig":"22"},{"size":4188,"mtime":1596345563506,"results":"35","hashOfConfig":"22"},{"size":1964,"mtime":1596345563510,"results":"36","hashOfConfig":"22"},{"size":99,"mtime":1596345563508,"results":"37","hashOfConfig":"22"},{"size":2732,"mtime":1596345563507,"results":"38","hashOfConfig":"22"},{"size":616,"mtime":1596345563505,"results":"39","hashOfConfig":"22"},{"size":101,"mtime":1596345563507,"results":"40","hashOfConfig":"22"},{"size":2426,"mtime":1610278497380,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1kz7uvo",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\index.js",[],["92","93"],"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\App.js",["94"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport NavBarHey from './components/NavBar';\r\nimport PostIssue from './components/PostIssue';\r\nimport PageNotFound from './components/PageNotFound';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport IssuePage from './components/IssuePage';\r\nimport HomePage from './components/HomePage';\r\nimport AllIssuesPage from './components/AllIssuesPage';\r\nimport Redirect404 from './components/Redirect404';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { faRobot } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(fab, faRobot);\r\n\r\nconst clientId = process.env.REACT_APP_CLIENT_ID;\r\n\r\nfunction App() {\r\n\tconst [token, setToken] = useState(null);\r\n\tconst getToken = () => {\r\n\t\tconst existingToken = localStorage.getItem('token');\r\n\t\tconst accessToken = window.location.search.split('=')[0] === '?access_token' ? window.location.search.split('=')[1].split('&')[0] : null;\r\n\r\n\t\tif (!accessToken && !existingToken) {\r\n\t\t\twindow.location.replace(`https://github.com/login/oauth/authorize?scope=user:email,repo&client_id=${clientId}`);\r\n\t\t}\r\n\r\n\t\tif (accessToken) {\r\n\t\t\tconsole.log(`New accessToken: ${accessToken}`);\r\n\r\n\t\t\tlocalStorage.setItem('token', accessToken);\r\n\r\n\t\t\tsetToken(accessToken);\r\n\t\t}\r\n\r\n\t\tif (existingToken) {\r\n\t\t\tsetToken(existingToken);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// getIssues();\r\n\t\tgetToken();\r\n\t}, []);\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t{/* <button onClick={() => getIssues()}>issues</button> */}\r\n\r\n\t\t\t\t<NavBarHey path=\"/test1\" />\r\n\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\" exact>\r\n\t\t\t\t\t\t<HomePage />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/:owner/:repo/issues/new\" exact render={(props) => <PostIssue {...props} />} />\r\n\t\t\t\t\t{/* <PostIssue token={token} /> */}\r\n\r\n\t\t\t\t\t<Route path=\"/:owner/:repo/issues\" exact component={AllIssuesPage} />\r\n\r\n\t\t\t\t\t<Route path=\"/:owner/:repo/issues/:issueID\" exact render={(props) => <IssuePage {...props} />} />\r\n\r\n\t\t\t\t\t<Route path=\"/404\">\r\n\t\t\t\t\t\t<PageNotFound />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route component={Redirect404} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</BrowserRouter>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\serviceWorker.js",[],"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\Redirect404.js",[],"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\NavBar.js",["95"],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function NavBarHey() {\r\n\tconst [searchText, setSearchText] = useState(\"\");\r\n\tlet history = useHistory();\r\n\tconst changeSearch = (e) => {\r\n\t\tsetSearchText(e.target.value);\r\n\t\tconsole.log(searchText);\r\n\t};\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t};\r\n\tconst startSearch = () => {\r\n\t\thistory.push(`/${searchText}/issues`);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Navbar bg=\"light\" expand=\"lg\">\r\n\t\t\t\t<Navbar.Brand href=\"/\">QuickFix</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"/eatmoarrice/QuickFix/issues\">QF</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"/facebook/react/issues\">Facebook-React</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"/apple/swift/issues\">Apple-Swift</Nav.Link>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t\t<Form inline onSubmit={submitHandler}>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\":owner/:repo\"\r\n\t\t\t\t\t\t\tclassName=\"mr-sm-2\"\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\tchangeSearch(e);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button variant=\"outline-success\" onClick={() => startSearch()}>\r\n\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\PageNotFound.js",[],"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssuePage.js",["96","97"],"import React, { useState, useEffect } from \"react\";\r\nimport SideBar from \"./SideBar\";\r\nimport OriginalPost from \"./OriginalPost\";\r\nimport CommentBlock from \"./CommentBlock\";\r\nimport IssuePageHeader from \"./IssuePageHeader\";\r\nimport Reply from \"./Reply\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function IssuePage(props) {\r\n\tconst [issueInfo, setInfo] = useState(null);\r\n\tconst urlParams = props.match.params;\r\n\tlet history = useHistory();\r\n\tconst getIssues = async () => {\r\n\t\t// console.log(\"issues here\");\r\n\r\n\t\tlet url = `https://api.github.com/repos/${urlParams.owner}/${urlParams.repo}/issues/${urlParams.issueID}`;\r\n\t\tlet data = await fetch(url);\r\n\t\tif (data.status == 404) {\r\n\t\t\treturn history.push(\"/404\");\r\n\t\t}\r\n\t\tlet result = await data.json();\r\n\r\n\t\tsetInfo(result);\r\n\t\tconsole.log(\"result\", result);\r\n\t\t// console.log(\"result\", result);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetIssues();\r\n\t}, []);\r\n\r\n\tif (issueInfo === null || issueInfo === undefined) {\r\n\t\treturn <div>loading</div>;\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"d-flex justify-content-between mt-3\">\r\n\t\t\t\t<h3 className=\"address\">\r\n\t\t\t\t\t<FontAwesomeIcon icon=\"robot\" className=\"roboticon\" />\r\n\t\t\t\t\t{urlParams.owner}/{urlParams.repo}\r\n\t\t\t\t</h3>\r\n\t\t\t\t<Link to={`/${urlParams.owner}/${urlParams.repo}/issues/new`}>\r\n\t\t\t\t\t<Button variant=\"success\">New Issue</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<hr></hr>\r\n\t\t\t<IssuePageHeader issueInfo={issueInfo} owner={urlParams.owner} repo={urlParams.repo} issueID={urlParams.issueID} />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-8 col-12 border-right\">\r\n\t\t\t\t\t<OriginalPost issueInfo={issueInfo} />\r\n\t\t\t\t\t<CommentBlock owner={urlParams.owner} repo={urlParams.repo} issueID={urlParams.issueID} />\r\n\t\t\t\t\t<Reply owner={urlParams.owner} repo={urlParams.repo} issueID={urlParams.issueID} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4 d-md-block d-none\">\r\n\t\t\t\t\t<SideBar issueInfo={issueInfo} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\AllIssuesPage.js",[],"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\HomePage.js",[],"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\PostIssue.js",["98","99","100"],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function PostIssue(props) {\r\n\tlet history = useHistory();\r\n\tconst urlParams = props.match.params;\r\n\tlet [replyMessage, setReplyMessage] = useState(\"\");\r\n\tlet [replySubject, setReplySubject] = useState(\"\");\r\n\r\n\tconst postNewReply = async () => {\r\n\t\tconsole.log(\"subject:\", replySubject, \"body:\", replyMessage);\r\n\t\tconst issue = { title: replySubject, body: replyMessage };\r\n\t\tconst url = `https://api.github.com/repos/${urlParams.owner}/${urlParams.repo}/issues`;\r\n\t\tconst response = await fetch(url, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\r\n\t\t\t\tAuthorization: `token ${localStorage.getItem(\"token\")}`\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(issue)\r\n\t\t});\r\n\t\tconsole.log(issue);\r\n\t\thistory.push(`/${urlParams.owner}/${urlParams.repo}/issues`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex justify-content-center align-items-center flex-column\">\r\n\t\t\t<div>\r\n\t\t\t\tYou are creating a new issue for&nbsp;\r\n\t\t\t\t<span className=\"font-weight-bold\">\r\n\t\t\t\t\t{urlParams.owner}/{urlParams.repo}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<table width=\"800px\" style={{ marginTop: \"20px\" }}>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td width=\"50\"></td>\r\n\t\t\t\t\t\t<td style={{ backgroundColor: \"#eeeeee\", borderTopLeftRadius: \"20px\", borderTopRightRadius: \"20px\", padding: \"10px\" }}>\r\n\t\t\t\t\t\t\t<b>Create a new issue</b>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td width=\"50\"></td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t{/* SUBJECT */}\r\n\t\t\t\t\t\t\t\t<Form.Group\r\n\t\t\t\t\t\t\t\t\tstyle={{ resize: \"none\", padding: \"10px\", width: \"100%\", border: \"#eeeeee solid 1px\", marginTop: \"-1px\", marginBottom: \"0px\" }}\r\n\t\t\t\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\t\t\t\trows=\"10\"\r\n\t\t\t\t\t\t\t\t\tcontrolId=\"exampleForm.ControlTextarea1\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"textarea\" rows=\"1\" placeholder=\"subject\" value={replySubject} onInput={(e) => setReplySubject(e.target.value)} />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t{/* BODY */}\r\n\t\t\t\t\t\t\t\t<Form.Group\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tresize: \"none\",\r\n\t\t\t\t\t\t\t\t\t\tborderBottomLeftRadius: \"20px\",\r\n\t\t\t\t\t\t\t\t\t\tborderBottomRightRadius: \"20px\",\r\n\t\t\t\t\t\t\t\t\t\tpadding: \"10px\",\r\n\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\tborder: \"#eeeeee solid 1px\",\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: \"-1px\"\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\t\t\t\trows=\"10\"\r\n\t\t\t\t\t\t\t\t\tcontrolId=\"exampleForm.ControlTextarea1\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"textarea\" rows=\"10\" placeholder=\"description\" value={replyMessage} onInput={(e) => setReplyMessage(e.target.value)} />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Button onClick={() => postNewReply()} variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\SideBar.js",["101"],"import React from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nexport default function SideBar(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\tAssignees:{\" \"}\r\n\t\t\t\t\t{props.issueInfo.assignees.length === 0 ? (\r\n\t\t\t\t\t\t<span>No one assigned</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tprops.issueInfo.assignees.map((item) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t<img src={item.avatar_url} width=\"25px\" /> {item.login}{\" \"}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\tLabels:{\" \"}\r\n\t\t\t\t\t{props.issueInfo.labels.length === 0 ? (\r\n\t\t\t\t\t\t<span>None</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tprops.issueInfo.labels.map((item, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<span className=\"badge badge-warning\" key={i}>\r\n\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t<ListGroup.Item>Projects: Awsome project</ListGroup.Item>\r\n\t\t\t\t<ListGroup.Item>Milestone: {props.issueInfo.milestone}</ListGroup.Item>\r\n\t\t\t\t<ListGroup.Item>Linked pull request: Successfully merging a pull request may close this issue.</ListGroup.Item>\r\n\t\t\t</ListGroup>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssuePageHeader.js",[],"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\OriginalPost.js",["102","103","104","105","106","107"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport moment from \"moment\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"../App.css\";\r\nimport Emoji from \"react-emoji-render\";\r\nimport CodeBlock from \"./CodeBlock\";\r\n\r\nexport default function OriginalPost(props) {\r\n\tconst myRef = useRef(null);\r\n\tconst reactionTypeToEmoji = {\r\n\t\tTHUMBS_UP: \"👍\",\r\n\t\tTHUMBS_DOWN: \"👎\",\r\n\t\tLAUGH: \"😆\",\r\n\t\tFACE_WITH_ROLLING_EYES: \"🙄\",\r\n\t\tFACE_BLOWING_A_KISS: \"😘\",\r\n\t\tMONEY_MOUTH_FACE: \"🤑\"\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"d-flex justify-content-between\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<table width=\"100%\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr align=\"left\" bgcolor=\"#eeeeee\">\r\n\r\n\t\t\t\t\t\t\t\t<th width=\"50\">\r\n\t\t\t\t\t\t\t\t\t<img width=\"50\" src={props.issueInfo.user.avatar_url}></img>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t{/* <th>{`${props.issueInfo.user.login} posted ${moment(props.issueInfo.created_at).fromNow()}`}</th> */}\r\n\t\t\t\t\t\t\t\t<th width=\"650\" style={{ marginLeft: \"10px\" }}>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-caret-left\"></i>\r\n\t\t\t\t\t\t\t\t\t{`  ${props.issueInfo.user.login}`}\r\n\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"normal\" }}>{` commented: ${moment(props.issueInfo.created_at).fromNow()}`}</span>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th className=\"text-right\"></th>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle className=\"minh-dropdown\" id=\"dropdown-basic\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t😆\r\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-1\">👍</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-2\">👎</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-3\">😆</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-4\">🙄</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-5\">😘</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-5\">🤑</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle className=\"minh-dropdown\" id=\"dropdown-basic\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-1\">Copy Link</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-2\">Quote Reply</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody className=\"border\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td className=\"border-left\"></td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td className=\"text-right\">{`ID: ${props.issueInfo.user.id}`}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td colSpan=\"3\" className=\"InfoCopy text-left border-left\" style={{ paddingRight: \"20px\", paddingLeft: \"20px\" }}>\r\n\t\t\t\t\t\t\t\t\t<ReactMarkdown source={props.issueInfo.body} renderers={{ code: CodeBlock }} />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\CommentBlock.js",["108","109","110","111"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport moment from \"moment\";\r\nimport ReactMarkdown from \"react-markdown/with-html\";\r\nimport CodeBlock from \"./CodeBlock\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop);\r\n\r\nexport default function CommentBlock(props) {\r\n\tconst myRef = useRef(null);\r\n\tconst executeScroll = () => scrollToRef(myRef);\r\n\tconst reactionTypeToEmoji = {\r\n\t\tTHUMBS_UP: \"👍\",\r\n\t\tTHUMBS_DOWN: \"👎\",\r\n\t\tLAUGH: \"😆\",\r\n\t\tHOORAY: \"🎉\",\r\n\t\tCONFUSED: \"😕\",\r\n\t\tHEART: \"❤️\"\r\n\t};\r\n\r\n\tconst fetchSingleComment = async () => {\r\n\t\tlet url = `https://api.github.com/repos/${props.owner}/${props.repo}/issues/${props.issueID}/comments`;\r\n\t\tlet data = await fetch(url);\r\n\t\tlet result = await data.json();\r\n\t\tsetSingleComment(result);\r\n\t\tconsole.log(result);\r\n\t\tfetchEmojies();\r\n\t};\r\n\r\n\tconst fetchEmojies = async () => {\r\n\t\tlet url = \"https://api.github.com/repos/facebook/react/comments/19073/reactions\";\r\n\t\tlet data = await fetch(url);\r\n\t\tlet result = await data.json();\r\n\t\tsetReaction(result);\r\n\t\tconsole.log(\"emojoies\", result);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSingleComment();\r\n\t}, []);\r\n\r\n\tconst [singleComment, setSingleComment] = useState(null);\r\n\tconst [reaction, setReaction] = useState(null);\r\n\r\n\tconst reply = () => {\r\n\t\texecuteScroll();\r\n\t};\r\n\r\n\tif (singleComment == null) {\r\n\t\treturn <div>Loading</div>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={{ marginTop: \"20px\" }}>\r\n\t\t\t{singleComment.map((item, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<table key={item.id} width=\"100%\" className=\"border\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr height=\"50\" align=\"left\" bgcolor=\"#eeeeee\">\r\n\t\t\t\t\t\t\t\t<th width=\"50\">\r\n\t\t\t\t\t\t\t\t\t<img className=\"avatar\" width=\"50\" src={item.user.avatar_url}></img>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th width=\"650\" style={{ marginLeft: \"10px\" }}>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-caret-left\"></i>\r\n\t\t\t\t\t\t\t\t\t{`  ${item.user.login}`}\r\n\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"normal\" }}>{` commented: ${moment(item.created_at).fromNow()}`}</span>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"replyBtn\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => reply()}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#6c757d\", color: \"white\", border: \"none\", borderRadius: \"15px\", paddingLeft: \"15px\", paddingRight: \"15px\", fontWeight: \"bold\" }}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tReply\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td style={{ borderLeft: \"solid 1px #eeeeee\" }}></td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td className=\"text-right\" style={{ paddingRight: \"10px\", borderRight: \"solid 1px #eeeeee\" }}>{`ID: ${item.user.id}`}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\t\t\tcolSpan=\"3\"\r\n\t\t\t\t\t\t\t\t\talign=\"left\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"ArticleCopy\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tpaddingBottom: \"10px\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingLeft: \"20px\",\r\n\t\t\t\t\t\t\t\t\t\tpaddingRight: \"20px\",\r\n\t\t\t\t\t\t\t\t\t\tborderLeft: \"solid 1px #eeeeee\",\r\n\t\t\t\t\t\t\t\t\t\tborderRight: \"solid 1px #eeeeee\",\r\n\t\t\t\t\t\t\t\t\t\tborderBottom: \"solid 1px #eeeeee\"\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ReactMarkdown key={index} source={item.body} renderers={{ code: CodeBlock }} />\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr height=\"50\">\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td className=\"text-left\" style={{ paddingLeft: \"10px\" }}>\r\n\t\t\t\t\t\t\t\t\tTotal Reactions\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n\t\t\t\t\t\t\t\t\t\t\t😆\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Toggle>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-1\">👍</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-2\">👎</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-3\">😆</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-4\">🎉</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-5\">😕</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Dropdown.Item href=\"#/action-6\">❤️</Dropdown.Item>\r\n\t\t\t\t\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<div ref={myRef} style={{ marginBottom: \"100px\" }}></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\Reply.js",["112"],"import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function Reply(props) {\r\n\tlet [replyMessage, setReplyMessage] = useState(\"\");\r\n\r\n\tconst postNewReply = async () => {\r\n\t\tconsole.log(\"reply\", replyMessage);\r\n\t\tconsole.log(\"token\", props.token);\r\n\t\tconst issue = { body: replyMessage };\r\n\r\n\t\tconst url = `https://api.github.com/repos/${props.owner}/${props.repo}/issues/${props.issueID}/comments`;\r\n\t\tconst response = await fetch(url, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\r\n\t\t\t\tAuthorization: `token ${localStorage.getItem(\"token\")}`\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(issue)\r\n\t\t});\r\n\t\twindow.location.reload();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"text-center\">\r\n\t\t\t{/* Here is Reply and token is {props.token} */}\r\n\t\t\t<table width=\"100%\" style={{ marginTop: \"20px\" }}>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td width=\"50\"></td>\r\n\t\t\t\t\t\t<td style={{ backgroundColor: \"#eeeeee\", borderTopLeftRadius: \"20px\", borderTopRightRadius: \"20px\", padding: \"10px\" }}>\r\n\t\t\t\t\t\t\t<b>Reply</b>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td width=\"50\"></td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<Form.Group\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tresize: \"none\",\r\n\t\t\t\t\t\t\t\t\t\tborderBottomLeftRadius: \"20px\",\r\n\t\t\t\t\t\t\t\t\t\tborderBottomRightRadius: \"20px\",\r\n\t\t\t\t\t\t\t\t\t\tpadding: \"10px\",\r\n\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\tborder: \"#eeeeee solid 1px\",\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: \"-1px\"\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\t\t\t\trows=\"10\"\r\n\t\t\t\t\t\t\t\t\tcontrolId=\"exampleForm.ControlTextarea1\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Form.Control as=\"textarea\" rows=\"10\" placeholder=\"message\" value={replyMessage} onInput={(e) => setReplyMessage(e.target.value)} />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Button onClick={() => postNewReply()} variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssueSearchBar.js",[],"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssueBlock.js",["113","114","115","116","117","118"],"import React, { useState, useEffect } from \"react\";\r\nimport IssueBlockHeader from \"./IssueBlockHeader\";\r\nimport IssueBlockIssue from \"./IssueBlockIssue\";\r\nimport parse from \"parse-link-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function IssueBlock(props) {\r\n\tconst [info, setInfo] = useState(null);\r\n\tconst [pagebuttons, setPagebuttons] = useState([]);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst [pages, setPages] = useState(null);\r\n\tconst [simpleURL, setsimpleURL] = useState(null);\r\n\tlet history = useHistory();\r\n\tlet pageNumbers = [];\r\n\tconst getIssues = async () => {\r\n\t\tlet url = `https://api.github.com/repos/${props.owner}/${props.repo}/issues`;\r\n\t\tlet data = await fetch(url);\r\n\t\tif (data.status == 404) {\r\n\t\t\treturn history.push(\"/404\");\r\n\t\t}\r\n\t\tlet result = await data.json();\r\n\t\tsetInfo(result);\r\n\t\tlet links = parse(data.headers.get(\"Link\"));\r\n\t\tif (links !== null) {\r\n\t\t\tconsole.log(parse(data.headers.get(\"Link\")));\r\n\t\t\tlet totalPages = parseInt(links.last.page);\r\n\t\t\tlet bareURL = links.last.url.split(\"=\")[0];\r\n\t\t\tcalculatePages(totalPages, bareURL);\r\n\t\t\tconsole.log(totalPages, bareURL);\r\n\t\t\tsetPages(totalPages);\r\n\t\t\tsetsimpleURL(bareURL);\r\n\t\t} else {\r\n\t\t\tcalculatePages(1, url);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getIssuesForPage = async (pageURL) => {\r\n\t\tlet data = await fetch(pageURL);\r\n\t\tif (data.status == 404) {\r\n\t\t\treturn history.push(\"/404\");\r\n\t\t}\r\n\t\tlet result = await data.json();\r\n\t\tsetInfo(result);\r\n\t};\r\n\r\n\tconst calculatePages = (totalPages, bareURL) => {\r\n\t\tpageNumbers = [];\r\n\t\tfor (let i = 1; i <= totalPages; i++) {\r\n\t\t\tlet active = currentPage == i ? \"active\" : \"\";\r\n\t\t\tpageNumbers.push(\r\n\t\t\t\t<li className={`page-item`} key={`button-${i}`} onClick={() => goToPage(i, bareURL)}>\r\n\t\t\t\t\t{/* <li className={`page-item ${active}`} key={`button-${i}`} onClick={() => goToPage(i, bareURL)}></li> */}\r\n\t\t\t\t\t<a href=\"#\" className=\"page-link\">\r\n\t\t\t\t\t\t{i}\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\t\tsetPagebuttons(pageNumbers);\r\n\t};\r\n\tconst goToPage = (i, bareURL) => {\r\n\t\tsetCurrentPage(i);\r\n\t\tgetIssuesForPage(`${bareURL}=${i}`);\r\n\t\tconsole.log(currentPage, pages, simpleURL);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetIssues();\r\n\t}, []);\r\n\tconst item = () => {\r\n\t\treturn info.map((item, i) => <IssueBlockIssue info={item} key={i} owner={props.owner} repo={props.repo} />);\r\n\t};\r\n\tif (info === null || pagebuttons.length === 0) {\r\n\t\treturn <div>Loading</div>;\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"bigIssue\">{item()}</div>\r\n\t\t\t<IssueBlockHeader />\r\n\t\t\t{/* <Pagination /> */}\r\n\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t<ul className=\"pagination\">{pagebuttons}</ul>\r\n\t\t\t</div>\r\n\t\t\t{/* {links === null ? <div>1 page </div> : calculatePages()} */}\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\CodeBlock.js",[],"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssueBlockHeader.js",[],"C:\\Users\\Monkey\\Desktop\\mojave\\QuickFix\\src\\components\\IssueBlockIssue.js",["119","120","121","122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":21,"column":9,"nodeType":"130","messageId":"131","endLine":21,"endColumn":14},{"ruleId":"128","severity":1,"message":"132","line":3,"column":23,"nodeType":"130","messageId":"131","endLine":3,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":21,"column":19,"nodeType":"135","messageId":"136","endLine":21,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":32,"column":5,"nodeType":"139","endLine":32,"endColumn":7,"suggestions":"140"},{"ruleId":"128","severity":1,"message":"141","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"142","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"143","line":17,"column":9,"nodeType":"130","messageId":"131","endLine":17,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":16,"column":10,"nodeType":"146","endLine":16,"endColumn":52},{"ruleId":"128","severity":1,"message":"147","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"141","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"148","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":13},{"ruleId":"128","severity":1,"message":"149","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":13},{"ruleId":"128","severity":1,"message":"150","line":11,"column":8,"nodeType":"130","messageId":"131","endLine":11,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":29,"column":10,"nodeType":"146","endLine":29,"endColumn":64},{"ruleId":"128","severity":1,"message":"150","line":12,"column":8,"nodeType":"130","messageId":"131","endLine":12,"endColumn":27},{"ruleId":"137","severity":1,"message":"151","line":40,"column":5,"nodeType":"139","endLine":40,"endColumn":7,"suggestions":"152"},{"ruleId":"128","severity":1,"message":"153","line":43,"column":9,"nodeType":"130","messageId":"131","endLine":43,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":61,"column":10,"nodeType":"146","endLine":61,"endColumn":72},{"ruleId":"128","severity":1,"message":"143","line":14,"column":9,"nodeType":"130","messageId":"131","endLine":14,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":18,"column":19,"nodeType":"135","messageId":"136","endLine":18,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":39,"column":19,"nodeType":"135","messageId":"136","endLine":39,"endColumn":21},{"ruleId":"128","severity":1,"message":"154","line":49,"column":8,"nodeType":"130","messageId":"131","endLine":49,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":49,"column":29,"nodeType":"135","messageId":"136","endLine":49,"endColumn":31},{"ruleId":"155","severity":1,"message":"156","line":53,"column":6,"nodeType":"146","endLine":53,"endColumn":40},{"ruleId":"137","severity":1,"message":"138","line":68,"column":5,"nodeType":"139","endLine":68,"endColumn":7,"suggestions":"157"},{"ruleId":"128","severity":1,"message":"147","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"141","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"158","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"159","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":20,"column":60,"nodeType":"135","messageId":"136","endLine":20,"endColumn":62},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getIssues'. Either include it or remove the dependency array.","ArrayExpression",["162"],"'useEffect' is defined but never used.","'moment' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Emoji' is defined but never used.","'myRef' is assigned a value but never used.","'reactionTypeToEmoji' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSingleComment'. Either include it or remove the dependency array.",["163"],"'reaction' is assigned a value but never used.","'active' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["164"],"'Link' is defined but never used.","'OriginalPost' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"165","fix":"169"},"Update the dependencies array to be: [getIssues]",{"range":"170","text":"171"},"Update the dependencies array to be: [fetchSingleComment]",{"range":"172","text":"173"},{"range":"174","text":"171"},[1073,1075],"[getIssues]",[1187,1189],"[fetchSingleComment]",[2183,2185]]